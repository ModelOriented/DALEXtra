% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/champion_challenger.R
\name{champion_challenger}
\alias{champion_challenger}
\title{Compare machine learning models}
\usage{
champion_challenger(sections, dot_size = 4, output_dir_path = getwd(),
  output_name = "Report", model_performance_table = FALSE,
  title = "ChampionChallenger", author = Sys.info()[["user"]])
}
\arguments{
\item{sections}{- list of sections to be attached to report. Could be sections available with DALEXtra which are \code{\link{funnel_measure}}
\code{\link{training_test_comparison}}, \code{\link{overall_comparison}} or any other explanation that can work with \code{plot} function.}

\item{dot_size}{- dot_size argument passed to \code{\link{plot.funnel_measure}} if \code{\link{funnel_measure}} section present}

\item{output_dir_path}{- path to directory where Report should be created. By default it is current working directory.}

\item{output_name}{- name of the Report. By default it is "Report"}

\item{model_performance_table}{- If TRUE and \code{\link{overall_comparison}} section present, table of scores will be displayed.}

\item{title}{- Title for report, by default it is "ChampionChallenger".}

\item{author}{- Author of , report. By default it is current user name.}
}
\value{
rmarkdown report
}
\description{
Compare machine learning models
}
\examples{
\donttest{
library("mlr")
library("DALEXtra")
task <- mlr::makeRegrTask(
  id = "R",
  data = apartments,
  target = "m2.price"
)
learner_lm <- mlr::makeLearner(
  "regr.lm"
)
model_lm <- mlr::train(learner_lm, task)
explainer_lm <- explain_mlr(model_lm, apartmentsTest, apartmentsTest$m2.price, label = "LM")

learner_rf <- mlr::makeLearner(
  "regr.randomForest"
)
model_rf <- mlr::train(learner_rf, task)
explainer_rf <- explain_mlr(model_rf, apartmentsTest, apartmentsTest$m2.price, label = "RF")

learner_gbm <- mlr::makeLearner(
  "regr.gbm"
)
model_gbm <- mlr::train(learner_gbm, task)
explainer_gbm <- explain_mlr(model_gbm, apartmentsTest, apartmentsTest$m2.price, label = "GBM")


plot_data <- funnel_measure(explainer_lm, list(explainer_rf, explainer_gbm),
                            nbins = 5, measure_function = DALEX::loss_root_mean_square)

champion_challenger(list(plot_data), dot_size = 3)
}

}
